#!/usr/bin/env anduril-runner
//$ -d $HOME/wrk/dippa-execute
//$ --log $HOME/wrk/dippa-execute/log
//$ --java-heap 4000
//$ --threads 4




// INIT
//==========================================================
// Parameters
startFromRaw        = false
corMethod           = "spearman"
corMinCompleteCases = 20
corPThresh          = 1
N_ITER              = 200
N_CHAINS            = 4
MULTICORE           = "true"
// Input data
CODEDIR = $HOME+"/wrk/dippa-analyysi/"
DATADIR = $HOME+"/wrk/dippa-data/"
proteinMessy = INPUT(path=DATADIR+"Oslo2-RPPA_data.csv")
mirna = INPUT(path=DATADIR+"mirna.csv")
mrna = INPUT(path=DATADIR+"mrna.csv")
mrnaAnnotAgilent = INPUT(path=DATADIR+"mrna_annot.csv")




// PREPROCESS
//==========================================================

// Expand a AKT1/2/3 type proteins, rename samples (- to .) and remove
// antibody column
proteinAnnotExpand = INPUT(path=CODEDIR+"protein_expandannot.csv")
proteinExpand = IDConvert(
	csv = proteinMessy,
	conversionTable = proteinAnnotExpand,
	sourceColumn = "Gene",
	keyColumn = "GeneJoined",
	conversionColumn = "GeneExpanded",
	splitConverted = true,
	originalWhenMissing = true)
proteinRename = SearchReplace(
	file = proteinExpand,
	key00 = "(OSL2.)-(.{6})",
	value00 = "$1.$2")
protein = CSVFilter(
	csv = proteinRename,
	includeColumns = "Antibody",
	negate = true)

// Convert mrna probe accession IDs to gene names
geneAnnotBiomart = BiomartAnnotator(
	filter = mrnaAnnotAgilent,
	filterTypes = "efg_agilent_sureprint_g3_ge_8x60k",
	attributes = "external_gene_name,ensembl_gene_id",
	martHost = "www.ensembl.org",
	@execute = "once",
	@enabled = false)
geneAgilent = IDConvert(
	csv = mrna,
	conversionTable = mrnaAnnotAgilent,
	conversionColumn = "GENE_SYMBOL",
	unique = true,
	collapseNumeric = "mean",
	dropMissing = true)



// BAYESIAN REGRESSION ANALYSIS
//==========================================================
regressionScriptUni = INPUT(path=CODEDIR+"regression_analysis.R")
regressionScriptMulti = INPUT(path=CODEDIR+"regression_analysis_multivariate.R")
regressionModelFile = CODEDIR+"simple_priors.stan"
testGenes = "GSK3B"//,BRAF,PTK2"
testMirnas = "hsa-miR-638,hsa-let-7d,hsa-miR-193a-3p"

regressionUni = REvaluate(
	script = regressionScript,
	table1 = protein,
	table2 = geneAgilent,
	table3 = mirna,
	param1 = regressionModelFile,
	param2 = N_ITER,
	param3 = N_CHAINS,
	param4 = MULTICORE,
	param5 = testGenes,
	param6 = testMirnas)
regressionMulti = REvaluate(
	script = regressionScript,
	table1 = protein,
	table2 = geneAgilent,
	table3 = mirna,
	param1 = regressionModelFile,
	param2 = N_ITER,
	param3 = N_CHAINS,
	param4 = MULTICORE,
	param5 = testGenes,
	param6 = testMirnas)
